function [Crest,lamda,innerdistvec,outerdistvec] = CrestFinder(image,centers,minradius)
%CRESTFINDER: V1, This function goes through a binarized image and finds
%the inner and outer borders of the wave crest. With these two positions
%found a average ring is formed using all position of the inner and outer
%borders. As input the function takes in an image, the defined centers of
%the rings in the image (found through experimentation with findCircles
%function), and a minimum radius to be considered. Anything below the
%minimum radius will not be calculated.
% The output is the crest radius in vector "crest" for each ring
%found. 
% Lamda is the wave lengths found within the image between the crests 
% inner and outer dist vecs are for troubleshooting and/or more analysis if
% needed. These may not be necessary but are kept in the current version of
% the code.

%   Detailed explanation goes here
yCentroid=centers(1,2);
xCentroid=centers(1,1);
minrad=minradius;
innerdistvec=[];
outerdistvec=[];
BW=image;
[B,L,N,A] = bwboundaries(BW); 
imshow(BW); hold on; 
% Loop through object boundaries, this will "hopefully" find only the boundaries of proper rings  
for k = 1:N 
    % Boundary k is the parent of a hole if the k-th column 
    % of the adjacency matrix A contains a non-zero element. Boundary k is
    % the outer boundary of the circle/crest
    if (nnz(A(:,k)) > 0) 
        boundaryP = B{k}; 
        plot(boundaryP(:,2),... 
            boundaryP(:,1),'r','LineWidth',2); 
         outerdistances = mean(sqrt((boundaryP(:,2)-xCentroid).^2 + (boundaryP(:,1)-yCentroid).^2));
        if outerdistances>=minrad
            outerdistvec=[outerdistvec outerdistances];
            
        end
        % Loop through the children of boundary k, the children of a given
        % boundary of k is the inner boundary of that circle
        for l = find(A(:,k))' 
            boundaryC = B{l}; 
            plot(boundaryC(:,2),... 
                boundaryC(:,1),'g','LineWidth',2);
            innerdistances = mean(sqrt((boundaryC(:,2)-xCentroid).^2 + (boundaryC(:,1)-yCentroid).^2));
        if innerdistances>=minrad
            innerdistvec=[innerdistvec innerdistances];
        end
        end 
    end
    



end
hold off
%%
if length(outerdistvec)==length(innerdistvec)
    Crest=abs(outerdistvec+innerdistvec)/2;
    lamda=abs(diff(Crest));
else
    Crest=[];
    lamda=[];
end

end

